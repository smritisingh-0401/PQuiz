package com.majorproject.programmingquiz;

import android.os.Bundle;

import androidx.fragment.app.Fragment;
import androidx.recyclerview.widget.LinearLayoutManager;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;

import com.majorproject.programmingquiz.AdapterClass.SubExplainAdapter;
import com.majorproject.programmingquiz.databinding.FragmentExplainBinding;
import com.majorproject.programmingquiz.modelClass.ExplainModel;

import java.util.ArrayList;

public class Explain_Fragment extends Fragment {
    
    FragmentExplainBinding binding;
    
    SubExplainAdapter adapter;

    ArrayList<ExplainModel> list = new ArrayList<>();
    
    String category, explain;

    
    public Explain_Fragment() {
        // Required empty public constructor
    }

    public Explain_Fragment(String category, String title) {
        this.category = category;
        this.explain = title;
        // Required empty public constructor
    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        binding = FragmentExplainBinding.inflate(getLayoutInflater());
        
        LoadExplain();
        return binding.getRoot();
    }

    private void LoadExplain() {

        binding.rcv2.setLayoutManager(new LinearLayoutManager(getContext()));
        list.clear();


       switch(category) {
           case "C":
               switch (explain) {
                   case "C BASIC":
                       list.add(new ExplainModel("1. What is the symbol used for the modulo operator in C?\n\nExplanation: The modulo operator (%) returns the remainder of the division of two numbers.",  "C"));
                       list.add(new ExplainModel("2. Which loop in C will always execute at least once?\n\nExplanation: The do-while loop first executes the code block and then evaluates the condition. Therefore, it always executes at least once.",  "C"));
                       list.add(new ExplainModel("3. What is the correct syntax for defining a function in C?\n\n Explanation: In C, functions are defined with a return type (int in this case), followed by the function name, parentheses containing any arguments, and then the function body enclosed in curly braces.",  "C"));
                       list.add(new ExplainModel("4. How do you declare a one-dimensional array in C?\n\nExplanation: This declares an integer array named \"array\" with 10 elements. ",  "C"));
                       list.add(new ExplainModel("5. Which conditional statement is used to check multiple conditions in C?\n\nExplanation: The if-else-if ladder allows you to check multiple conditions sequentially until one is found to be true.",  "C"));
                       list.add(new ExplainModel("6. What is the correct syntax for the ternary operator in C?\n\nExplanation: The ternary operator in C has the syntax \"condition ? expression1 : expression2\", where if the condition is true, expression1 is evaluated, otherwise expression2 is evaluated.",  "C"));
                       list.add(new ExplainModel("7. Which operator is used for pointer de-referencing in C?\n\n Explanation: The asterisk (*) operator is used to dereference pointers in C.",  "C"));
                       list.add(new ExplainModel("8. What is the purpose of the \"break\" statement in C?\n\nExplanation: The \"break\" statement is used to exit a loop or switch statement prematurely.",  "C"));
                       list.add(new ExplainModel("9. How do you pass arguments to a function in C (by default)?\n\nExplanation: By default, arguments are passed by value in C, meaning that the function receives a copy of the argument's value.",  "C"));
                       list.add(new ExplainModel("10. Which of the following is not a valid C identifier?\n \nExplanation: C identifiers cannot start with a digit.",  "C"));
                       break;
                   case "C INTERMEDIATE":
                       list.add(new ExplainModel("1. Which of the following correctly declares a union in C?\n \nExplanation: Correctly declares a union named `myUnion` with members `a` and `b`.",  "C"));
                       list.add(new ExplainModel("2. What is the size of an empty structure in C?\n \nExplanation: An empty structure in C still occupies memory space. The size is greater than zero but usually rounded up to the nearest byte boundary. So, the correct option is 1 byte.",  "C"));
                       list.add(new ExplainModel("3. Which type casting method is preferred in C?\n \nExplanation: Explicit casting is preferred in C to make the type conversion clear and explicit. So, the correct option is Explicit Casting.",  "C"));
                       list.add(new ExplainModel("4. Which header file is required to use the `malloc()` and `free()` functions in C?\n \nExplanation: The `malloc()` and `free()` functions are declared in the `<stdlib.h>` header file. So, the correct option is <stdlib.h>.",  "C"));
                       list.add(new ExplainModel("5. What does the `->` operator do in C?\n\nExplanation: The `->` operator in C is used to access a member of a structure through a pointer. So, the correct option is, Accesses a member of a structure through a pointer.",  "C"));
                       list.add(new ExplainModel("6. Which of the following is a valid way to declare a function pointer in C?\n \nExplanation: Correctly declares a function pointer named `func_ptr` that points to a function returning an integer and taking no arguments.",  "C"));
                       list.add(new ExplainModel("7. Which of the following statements about unions is correct?\n \nExplanation: Unions allow storage of different data types in the same memory location. However, only one member can be accessed at a time. So, the correct answer is, Unions can contain members of different data types, but only one member can be accessed at a time. ",  "C"));
                       list.add(new ExplainModel("8. Which of the following statements regarding recursion in C is correct?\n \nExplanation: Recursion in C is a process in which a function calls itself directly or indirectly. So, the correct answer is, Recursion is a process in which a function calls itself directly or indirectly",  "C"));
                       list.add(new ExplainModel("9. Which of the following statements is true about the scope of a variable in C?\n \nExplanation: The scope of a variable defines where in the program the variable can be accessed. Variables declared inside a block have local scope, meaning they can only be accessed within that block. So, the correct answer is, A variable declared inside a block has local scope.",  "C"));
                       list.add(new ExplainModel("10. What is the lifetime of a static variable in C?\n \nExplanation: Static variables in C have a lifetime that extends until the end of the program. So, the correct answer is a, Until the end of the program.",  "C"));
                       break;
                   case "C ADVANCED":
                       list.add(new ExplainModel("1. Which of the following sorting algorithms has the best worst-case time complexity?\n\nExplanation: Merge Sort has a worst-case time complexity of O(n log n), which is better than the O(n^2) complexities of Bubble Sort, Insertion Sort, and Selection Sort. So, the correct answer is Merge Sort",  "C"));
                       list.add(new ExplainModel("2. What is the time complexity of binary search?\n\nExplanation: Binary search has a time complexity of O(log n) as it halves the search space in each iteration. So, the correct answer is O(log n).",  "C"));
                       list.add(new ExplainModel("3. In a multi-dimensional array arr[i][j], how is the memory organized?\n\nExplanation: In C, multi-dimensional arrays are stored in contiguous memory locations, with rows stored one after the other. So, the correct answer is Contiguous memory locations for each row.",  "C"));
                       list.add(new ExplainModel("4. Which data structure is used to implement a linked list?\n\nExplanation: Linked lists are implemented using nodes, where each node contains a data field and a reference to the next node in the sequence",  "C"));
                       list.add(new ExplainModel("5. What is the time complexity of searching in a binary search tree (BST) in the worst case?\n\nExplanation: In the worst case, when the binary search tree is unbalanced, the time complexity of searching in a BST is O(n), where n is the number of nodes. So, the correct answer is O(n).",  "C"));
                       list.add(new ExplainModel("6. Which of the following statements about macros in C is true?\n\nExplanation: Macros in C are expanded by the preprocessor before compilation, allowing for simple text substitution. So, the correct answer is, Macros are expanded by the preprocessor before compilation.",  "C"));
                       list.add(new ExplainModel("7. What is the purpose of the `inline` function in C?\n\nExplanation: The `inline` function specifier suggests the compiler to inline the function code at the call site, potentially reducing function call overhead. So, the correct answer is, To optimize function calls.",  "C"));
                       list.add(new ExplainModel("8. Which of the following sorting algorithms is not stable?\n\nExplanation: Quick Sort is not stable because it does not maintain the relative order of equal elements. So, the correct answer is, Quick Sort.",  "C"));
                       list.add(new ExplainModel("9. What is the main advantage of a linked list over an array?\n\nExplanation: Linked lists offer dynamic memory allocation, allowing for efficient insertion and deletion of elements at any position, unlike arrays which have a fixed size. So, the correct answer is Dynamic memory allocation.",  "C"));
                       list.add(new ExplainModel("10. Which of the following operations can be performed efficiently on a binary search tree (BST)?\n\nExplanation: Binary search trees are efficient for searching, insertion, and deletion operations, making finding the kth smallest element efficient due to their ordered structure. So, the correct answer is, Finding the kth smallest element.",  "C"));
                       break;
               }
               break;
           case "C++":
               switch (explain) {
                   case "C++ BASIC":
                       list.add(new ExplainModel("1. What is the purpose of a constructor in C++?\n\nExplanation: Constructors are used to initialize objects of a class. So, the correct answer is, To initialize objects.",  "C++"));
                       list.add(new ExplainModel("2. Which of the following is true about pointers in C++?\n\nExplanation: Pointers in C++ store the memory address of variables. So, the correct answer is, Pointers store the address of variables.",  "C++"));
                       list.add(new ExplainModel("3. What is the purpose of the `new` operator in C++?\n\nExplanation: The `new` operator is used to dynamically allocate memory for variables on the heap. So, the correct answer is, To allocate memory for variables on the heap.",  "C++"));
                       list.add(new ExplainModel("4. Which of the following is true about references in C++?\n\nExplanation: References in C++ are aliases to variables and cannot be reseated after initialization. So, the correct answer is, References cannot be reseated.",  "C++"));
                       list.add(new ExplainModel("5. What is the purpose of a destructor in C++?\n\nExplanation: Destructors are used to perform cleanup tasks before an object is destroyed, such as releasing allocated resources. So, the correct answer is, To perform cleanup tasks before an object is destroyed.",  "C++"));
                       list.add(new ExplainModel("6. What is the difference between an array and a pointer in C++?\n\nExplanation: Arrays have fixed sizes determined at compile time, while pointers can point to dynamically allocated memory and can be reassigned to point to different memory locations. So, the correct answer is, Arrays have fixed sizes, while pointers can dynamically resize.",  "C++"));
                       list.add(new ExplainModel("7. Which of the following is an example of object-oriented programming (OOP) concept in C++?\n\nExplanation: Inheritance is an OOP concept where a class inherits properties and behaviours from another class",  "C++"));
                       list.add(new ExplainModel("8. What is the purpose of the `delete` operator in C++?\n\nExplanation: The `delete` operator is used to deallocate dynamically allocated memory, which was previously allocated using the `new` operator. So, the correct answer is, To deallocate dynamically allocated memory",  "C++"));
                       list.add(new ExplainModel("9. What is the primary purpose of the `cin` function in C++?\n\nExplanation: The `cin` function is used for input from the console in C++. So, the correct answer is, To input data from the console.",  "C++"));
                       list.add(new ExplainModel("10. Which of the following is not a valid way to pass arguments to a function in C++?\n\nExplanation: Pass by array is not a valid way to pass arguments to a function in C++. Arrays decay into pointers when passed to functions. So, the correct answer is, Pass by array.",  "C++"));
                       break;
                   case "C++ INTERMEDIATE":
                       list.add(new ExplainModel("1. What is the purpose of the `new` and `delete` operators in C++?\n\nExplanation: The `new` operator is used to dynamically allocate memory for a single object on the heap, while the `delete` operator is used to deallocate that memory when it is no longer needed. So, the correct answer is, `new` is used to allocate memory for a single object on the heap, while `delete` is used to deallocate that memory.",  "C++"));
                       list.add(new ExplainModel("2. In C++, what is operator overloading?\n\nExplanation: Operator overloading allows you to redefine the behaviour of existing operators for user-defined types. So, the correct answer is, Operator overloading is a technique used to redefine the behaviour of existing operators for user-defined types.",  "C++"));
                       list.add(new ExplainModel("3. What is the access level of a derived class member inherited from its base class using public inheritance?\n\nExplanation: In public inheritance, public members of the base class become public members of the derived class.",  "C++"));
                       list.add(new ExplainModel("4. Which of the following is not a file mode in C++ file handling?\n\nExplanation: There is no file mode named ios::delete in C++ file handling. So, the correct answer is, ios::delete.",  "C++"));
                       list.add(new ExplainModel("5. What is the purpose of static_cast in C++?\n\nExplanation: static_cast is used for performing explicit type conversions in C++. So, the correct answer is, To perform explicit type conversion",  "C++"));
                       list.add(new ExplainModel("6. What is inheritance in C++?\n\nExplanation: Inheritance is the process of creating a new class (derived class) that inherits properties and behaviours from an existing class (base class). So, the correct answer is, Inheritance is the process of reusing code by creating a new class that inherits properties and behaviours from an existing class",  "C++"));
                       list.add(new ExplainModel("7. Which of the following is true about the protected access specifier in C++ inheritance?\n\nExplanation: Protected members are accessible within the same class and its derived classes. So, the correct answer is, Protected members are accessible within the same class and its derived classes.",  "C++"));
                       list.add(new ExplainModel("8. What is the purpose of the Standard Template Library (STL) in C++?\n\nExplanation: The Standard Template Library (STL) provides a set of standard data structures and algorithms in C++.So, the correct answer is, To provide a set of standard data structures and algorithms.",  "C++"));
                       list.add(new ExplainModel("9. What is the role of the dynamic_cast operator in C++?\n\nExplanation: The dynamic_cast operator is used to perform safe down-casting between related classes in the inheritance hierarchy. So, the correct answer is, To perform dynamic type casting between related classes in the inheritance hierarchy.",  "C++"));
                       list.add(new ExplainModel("10. Which container in the Standard Template Library (STL) provides constant-time insertion and removal of elements at both ends?\n\nExplanation: The deque (double-ended queue) container in the STL provides constant-time insertion and removal of elements at both ends.",  "C++"));
                       break;
                   case "C++ ADVANCED":
                       list.add(new ExplainModel("1. What is multiple inheritance in C++?\n\nExplanation: Multiple inheritance is the ability of a class to inherit from multiple base classes. So, the correct answer is, Multiple inheritance is the ability of a class to inherit from multiple base classes.",  "C++"));
                       list.add(new ExplainModel("2. What are move semantics in C++?\n\nExplanation: Move semantics allow moving resources from one object to another efficiently without unnecessary copying, typically by transferring ownership of dynamically allocated memory or other resources. So, the correct answer is, Move semantics allow moving resources from one object to another efficiently without unnecessary copying.",  "C++"));
                       list.add(new ExplainModel("3. What is a lambda expression in C++?\n\nExplanation: A lambda expression is an anonymous function that can capture variables from its surrounding scope. So, the correct answer is, A lambda expression is an anonymous function that can capture variables from its surrounding scope.",  "C++"));
                       list.add(new ExplainModel("4. What is a function object in C++?\n\nExplanation: A function object is an instance of a class that overloads the function call operator () allowing it to be called as if it were a function. So, the correct answer is, A function object is an instance of a class that overloads the function call operator ().",  "C++"));
                       list.add(new ExplainModel("5. What is multithreading in C++?\n\nExplanation: Multithreading is the process of executing multiple threads simultaneously within a single process, allowing for concurrent execution of tasks. So, the correct answer is, Multithreading is the process of executing multiple threads simultaneously within a single process.",  "C++"));
                       list.add(new ExplainModel("6. What is a thread in C++?\n\nExplanation: A thread is a lightweight process that shares resources with other threads within the same process, allowing for concurrent execution of tasks. So, the correct answer is, A thread is a lightweight process that shares resources with other threads within the same process.",  "C++"));
                       list.add(new ExplainModel("7. What is the purpose of std::mutex in C++ multithreading?\n\nExplanation: std::mutex is used to lock and unlock critical sections of code to prevent concurrent access by multiple threads, ensuring thread safety. So, the correct answer is, std::mutex is used to lock and unlock critical sections of code to prevent concurrent access by multiple threads.",  "C++"));
                       list.add(new ExplainModel("8. What is the purpose of std::condition_variable in C++ multithreading?\n\nExplanation: std::condition_variable is used to wait for a condition to become true before proceeding with execution, typically in conjunction with std::mutex for thread synchronization. So, the correct answer is, std::condition_variable is used to wait for a condition to become true before proceeding with execution.",  "C++"));
                       list.add(new ExplainModel("9. What is the purpose of std::future in C++ multithreading?\n\nExplanation: std::future is used to wait for the completion of a thread's execution and retrieve its result asynchronously. So, the correct answer is, std::future is used to wait for the completion of a thread's execution and retrieve its result.",  "C++"));
                       list.add(new ExplainModel("10. What is the purpose of std::atomic in C++ multithreading?\n\nExplanation: std::atomic is used to perform atomic operations on shared variables, ensuring thread safety without the need for mutexes. So, the correct answer is, std::atomic is used to perform atomic operations on shared variables, ensuring thread safety without the need for mutexes.",  "C++"));
                       break;
               }
               break;
           case "JAVA":
               switch (explain) {
                   case "JAVA BASIC":
                       list.add(new ExplainModel("1. What is a class in Java?\n\nExplanation: A class in Java serves as a blueprint for creating objects. It defines the data and behavior that objects of the class will have. So, the correct answer is, A class is a blueprint for creating objects.",  "JAVA"));
                       list.add(new ExplainModel("2. What is an object in Java?\n\nExplanation: An object in Java is an instance of a class. It represents a specific instance of the data and behavior defined by its class. So, the correct answer is, An object is an instance of a class.",  "JAVA"));
                       list.add(new ExplainModel("3. What is inheritance in Java?\n\nExplanation: Inheritance in Java allows a class (subclass) to inherit properties and behaviors from another class (superclass), enabling code reuse and creating a hierarchy of classes. So, the correct answer is, Inheritance is the process of reusing code by creating a new class that inherits properties and behaviors from an existing class.",  "JAVA"));
                       list.add(new ExplainModel("4. What is a method in Java?\n\nExplanation: A method in Java is a function defined inside a class. It represents the behavior or actions that objects of the class can perform. So, the correct answer is, A method is a function defined inside a class.",  "JAVA"));
                       list.add(new ExplainModel("5. What is exception handling in Java?\n\nExplanation: Exception handling in Java is the process of handling runtime errors or exceptional conditions that occur during program execution, such as division by zero or file not found. So, the correct answer is, Exception handling is a process of handling runtime errors in Java programs.",  "JAVA"));
                       list.add(new ExplainModel("6. What is the default access specifier in Java?\n\nExplanation: In Java, if no access specifier is specified, the default access level is package-private, which means the member is accessible only within its own package. So, the correct answer is, package-private (default)",  "JAVA"));
                       list.add(new ExplainModel("7. What is the purpose of the `toString()` method in Java?\n\nExplanation: The `toString()` method in Java is used to convert objects to strings. It is often overridden in user-defined classes to provide meaningful string representations of objects. So, the correct answer is, The `toString()` method is used to convert objects to strings.",  "JAVA"));
                       list.add(new ExplainModel("8. What is the purpose of the `super` keyword in Java?\n\nExplanation: The `super` keyword in Java is used to call the superclass constructor or to access the superclasses members (variables or methods). So, the correct answer is, The `super` keyword is used to call the superclass constructor.",  "JAVA"));
                       list.add(new ExplainModel("9. What is method overloading in Java?\n\nExplanation: Method overloading in Java is the process of defining multiple methods with the same name but different signatures (parameters) in the same class. So, the correct answer is, Method overloading is the process of defining multiple methods with the same name but different signatures in the same class.",  "JAVA"));
                       list.add(new ExplainModel("10. What is the purpose of the `this` keyword in Java?\n\nExplanation: The `this` keyword in Java is used to refer to the current instance of the class, primarily to differentiate between instance variables and parameters with the same name. So, the correct answer is, The `this` keyword is used to refer to the current instance of the class.",  "JAVA"));
                       break;
                   case "JAVA INTERMEDIATE":
                       list.add(new ExplainModel("1. What is multithreading in Java?\n\nExplanation: Multithreading in Java allows multiple threads to run concurrently within a single program, enabling concurrent execution of tasks. So, the correct answer is, Multithreading is the process of executing multiple threads simultaneously within a single program.",  "JAVA"));
                       list.add(new ExplainModel("2. What is synchronization in Java?\n\nExplanation: Synchronization in Java is the process of ensuring that only one thread can access a shared resource (such as a method or data) at a time, preventing concurrent access and potential data corruption. So, the correct answer is, Synchronization is the process of ensuring that only one thread can access a shared resource at a time.",  "JAVA"));
                       list.add(new ExplainModel("3. What is JDBC in Java?\n\nExplanation: JDBC (Java Database Connectivity) is a Java API that allows Java applications to interact with databases, enabling tasks such as connecting to databases, executing SQL queries, and retrieving results. So, the correct answer is, JDBC stands for Java Database Connector, which is used to connect Java applications with databases.",  "JAVA"));
                       list.add(new ExplainModel("4. What is serialization in Java?\n\nExplanation: Serialization in Java is the process of converting objects into byte streams for storage or transmission, allowing objects to be saved to files or sent over networks. So, the correct answer is, Serialization is the process of converting objects into byte streams for storage or transmission",  "JAVA"));
                       list.add(new ExplainModel("5. What is deserialization in Java?\n\nExplanation: Deserialization in Java is the process of converting byte streams back into objects, allowing previously serialized objects to be reconstructed. So, the correct answer is, Deserialization is the process of converting byte streams into objects.",  "JAVA"));
                       list.add(new ExplainModel("6. What is ArrayList in Java?\n\nExplanation: ArrayList in Java is a resizable array implementation of the List interface, allowing dynamic resizing of the underlying array as elements are added or removed. So, the correct answer is, ArrayList is a resizable array implementation of the List interface in Java.",  "JAVA"));
                       list.add(new ExplainModel("7. What is LinkedList in Java?\n\nExplanation: LinkedList in Java is a doubly linked list implementation of the List interface, where each element is connected to its previous and next elements. So, the correct answer is, LinkedList is a linked list implementation of the List interface in Java.",  "JAVA"));
                       list.add(new ExplainModel("8. What is HashMap in Java?\n\nExplanation: HashMap in Java is a hash table implementation of the Map interface, allowing key-value pairs to be stored and retrieved efficiently based on their hash codes. So, the correct answer is d) HashMap is a hash table implementation of the Map interface in Java.",  "JAVA"));
                       list.add(new ExplainModel("9. What is ConcurrentHashMap in Java?\n\nExplanation: ConcurrentHashMap in Java is a concurrent and thread-safe version of HashMap, optimized for high concurrency scenarios where multiple threads access and modify the map concurrently. So, the correct answer is, ConcurrentHashMap is a synchronized version of HashMap, providing thread-safe access to the underlying map.",  "JAVA"));
                       list.add(new ExplainModel("10. What is TreeSet in Java?\n\nExplanation: TreeSet in Java is a sorted set implementation of the Set interface, where elements are stored in sorted order based on their natural ordering or a specified comparator. So, the correct answer is, TreeSet is a sorted set implementation of the Set interface in Java",  "JAVA"));
                       break;
                   case "JAVA ADVANCED":
                       list.add(new ExplainModel("1. What is JVM (Java Virtual Machine)?\n\nExplanation: JVM (Java Virtual Machine) is a virtual machine that provides the runtime environment for Java bytecode to execute. It interprets and executes bytecode instructions generated by the Java compiler. So, the correct answer is, JVM is a virtual machine that provides the runtime environment for Java bytecode to execute.",  "JAVA"));
                       list.add(new ExplainModel("2. What is a design pattern in Java?\n\nExplanation: A design pattern in Java is a reusable solution to a recurring design problem in software design. It provides a template for solving common design problems and promotes code re-usability, maintainability, and scalability. So, the correct answer is, Design pattern is a reusable solution to a recurring design problem in software design.",  "JAVA"));
                       list.add(new ExplainModel("3. What are concurrency utilities in Java?\n\nExplanation: Concurrency utilities in Java are tools and APIs provided by the Java platform to manage multithreading and concurrent execution in Java programs. They include classes and interfaces for thread management, synchronization, and coordination. So, the correct answer is, Concurrency utilities are tools used to manage multithreading and concurrent execution in Java programs.",  "JAVA"));
                       list.add(new ExplainModel("4. What is thread safety in Java?\n\nExplanation: Thread safety in Java is the property of a program where shared resources can be accessed and modified by multiple threads concurrently without causing data corruption or inconsistencies. So, the correct answer is, Thread safety is the property of a Java program where multiple threads can access a resource concurrently without causing data corruption.",  "JAVA"));
                       list.add(new ExplainModel("5. What is the purpose of the synchronized keyword in Java?\n\nExplanation: The synchronized keyword in Java is used to define critical sections of code that should be executed by only one thread at a time, preventing concurrent access and ensuring thread safety. So, the correct answer is, The synchronized keyword is used to define atomic blocks of code that are executed by only one thread at a time.",  "JAVA"));
                       list.add(new ExplainModel("6. What is the purpose of the volatile keyword in Java?\n\nExplanation: The volatile keyword in Java is used to indicate that a variable's value may be modified by multiple threads concurrently, ensuring that changes made by one thread are visible to other threads immediately. So, the correct answer is, The volatile keyword is used to indicate that a variable's value may be modified by multiple threads concurrently.",  "JAVA"));
                       list.add(new ExplainModel("7. What is garbage collection in Java?\n\nExplanation: Garbage collection in Java is a process of automatically deallocating memory that is no longer in use by Java objects, reclaiming memory resources and preventing memory leaks. So, the correct answer is, Garbage collection is a process of deallocating memory that is no longer in use by Java objects.",  "JAVA"));
                       list.add(new ExplainModel("8. What is the purpose of the finalize() method in Java?\n\nExplanation: The finalize() method in Java is called by the garbage collector before reclaiming the memory occupied by an object, allowing the object to release any resources it holds. So, the correct answer is, The finalize() method is used to clean up resources before an object is garbage collected.",  "JAVA"));
                       list.add(new ExplainModel("9. What is memory management in Java?\n\nExplanation: Memory management in Java is the process of managing the allocation and de-allocation of memory resources used by Java objects, including garbage collection and memory optimization techniques. So, the correct answer is, Memory management is the process of managing the allocation and de-allocation of memory resources in Java programs.",  "JAVA"));
                       list.add(new ExplainModel("10. What is security in Java?\n\nExplanation: Security in Java refers to protecting Java programs from unauthorized access, data breaches, and malicious attacks, including encryption, access control, and secure coding practices. So, the correct answer is, Security in Java refers to protecting Java programs from unauthorized access and malicious attacks.",  "JAVA"));
                       break;
               }
               break;
           case "PYTHON":
               switch (explain) {
                   case "PYTHON BASIC":
                       list.add(new ExplainModel("1. What is Python?\n\nExplanation: Python is a high-level programming language known for its simplicity and readability, making it suitable for beginners and experienced programmers alike. So, the correct answer is, Python is a high-level programming language.",  "PYTHON"));
                       list.add(new ExplainModel("2. Which of the following is NOT a control flow statement in Python?\n\nExplanation: Functions are not control flow statements in Python; they are used to define reusable blocks of code. So, the correct answer is, function.",  "PYTHON"));
                       list.add(new ExplainModel("3. What is the purpose of the `if` statement in Python?\n\nExplanation: The `if` statement in Python is used for decision-making by executing a block of code only if a certain condition is true. So, the correct answer is, The `if` statement is used for decision-making.",  "PYTHON"));
                       list.add(new ExplainModel("4. What is the purpose of a function in Python?\n\nExplanation: A function in Python is used to define a block of code that can be reused and called multiple times with different inputs. So, the correct answer is, A function is used to define a block of code that can be reused.",  "PYTHON"));
                       list.add(new ExplainModel("5. What is string manipulation in Python?\n\nExplanation: String manipulation in Python refers to the process of modifying, combining, or extracting parts of strings to manipulate text data. So, the correct answer is, String manipulation is the process of modifying, combining, or extracting parts of strings.",  "PYTHON"));
                       list.add(new ExplainModel("6. Which of the following is a built-in function in Python?\n\nExplanation: The `print()` function is a built-in function in Python used to display output on the console. So, the correct answer is a) print().",  "PYTHON"));
                       list.add(new ExplainModel("7. What are keywords in Python?\n\nExplanation: Keywords in Python are special words that represent predefined actions or meanings in the language, and they cannot be used as variable names. So, the correct answer is, Keywords are special words that represent predefined actions or meanings in Python.",  "PYTHON"));
                       list.add(new ExplainModel("8. What is the purpose of the `def` keyword in Python?\n\nExplanation: The `def` keyword in Python is used to define a function. It is followed by the function name and parameters, and it defines the code block associated with the function. So, the correct answer is, The `def` keyword is used to define a function in Python.",  "PYTHON"));
                       list.add(new ExplainModel("9. What is the purpose of the `return` statement in Python?\n\nExplanation: The `return` statement in Python is used to return a value from a function, optionally exiting the function's execution. So, the correct answer is, The `return` statement is used to return a value from a function.",  "PYTHON"));
                       list.add(new ExplainModel("10. What is the purpose of the `len()` function in Python?\n\nExplanation: The `len()` function in Python is used to find the length of a list or string, returning the number of elements in the list or characters in the string. So, the correct answer is, The `len()` function is used to find the length of a list or string.",  "PYTHON"));
                       break;
                   case "PYTHON INTERMEDIATE":
                       list.add(new ExplainModel("1. What is exception handling in Python?\n\nExplanation: Exception handling in Python is the process of dealing with runtime errors or exceptional situations that may occur during program execution, ensuring graceful handling of errors and preventing program crashes. So, the correct answer is, Exception handling is a process of handling runtime errors in Python programs.",  "PYTHON"));
                       list.add(new ExplainModel("2. What is an advanced data structure in Python?\n\nExplanation: Advanced data structures in Python include dictionaries, sets, collections, and other complex data types that offer more flexibility and functionality compared to simple data types. So, the correct answer is, Advanced data structure refers to complex data types such as dictionaries, sets, and collections.",  "PYTHON"));
                       list.add(new ExplainModel("3. What are modules and packages in Python?\n\nExplanation: In Python, modules are single Python files that contain reusable code, while packages are directories that contain multiple modules and a special `__init__.py` file. So, the correct answer is, Modules are single Python files, while packages are collections of modules.",  "PYTHON"));
                       list.add(new ExplainModel("4. What is concurrency in Python?\n\nExplanation: Concurrency in Python refers to the ability of a program to execute multiple tasks or operations concurrently, either using threads or processes, to improve performance and responsiveness. So, the correct answer is, Concurrency is the ability of a program to execute multiple tasks simultaneously.",  "PYTHON"));
                       list.add(new ExplainModel("5. What is the difference between thread and multiprocessing in Python?\n\nExplanation: Threads in Python execute tasks concurrently within a single process, while multiprocessing involves spawning multiple independent processes to execute tasks in parallel. So, the correct answer is, Threads execute tasks concurrently within a single process, while multiprocessing involves multiple independent processes.",  "PYTHON"));
                       list.add(new ExplainModel("6. What is JSON parsing in Python?\n\nExplanation: JSON parsing in Python refers to the process of converting JSON (JavaScript Object Notation) strings into equivalent Python data structures such as dictionaries and lists. So, the correct answer is, JSON parsing is the process of converting JSON strings to Python objects.",  "PYTHON"));
                       list.add(new ExplainModel("7. What is XML parsing in Python?\n\nExplanation: XML parsing in Python refers to the process of extracting data from XML (eXtensible Markup Language) documents and converting it into Python objects or data structures. So, the correct answer is, XML parsing is the process of converting XML strings to Python objects.",  "PYTHON"));
                       list.add(new ExplainModel("8. What is the purpose of the `try-except` block in Python?\n\nExplanation: The `try-except` block in Python is used to execute a block of code that may raise exceptions, and to handle those exceptions gracefully without crashing the program. So, the correct answer is, The `try-except` block is used to execute a block of code and handle exceptions gracefully.",  "PYTHON"));
                       list.add(new ExplainModel("9. What is the purpose of the `finally` block in Python exception handling?\n\nExplanation: The `finally` block in Python exception handling is used to execute cleanup code that should run regardless of whether an exception occurs or not, ensuring that resources are released properly. So, the correct answer is, The `finally` block is used to execute cleanup code regardless of whether an exception occurs or not.",  "PYTHON"));
                       list.add(new ExplainModel("10. What is the purpose of the `concurrent.futures` module in Python?\n\nExplanation: The `concurrent.futures` module in Python provides a high-level interface for asynchronously executing callable objects (functions or methods) using either threads or processes. So, the correct answer is, The `concurrent.futures` module is used to manage multiprocessing in Python.",  "PYTHON"));
                       break;
                   case "PYTHON ADVANCED":
                       list.add(new ExplainModel("1. What is database access in Python?\n\nExplanation: Database access in Python involves connecting Python programs to external databases such as MySQL, PostgreSQL, or SQLite, allowing the program to perform CRUD (Create, Read, Update, Delete) operations on the database. So, the correct answer is, Database access refers to connecting Python programs to external databases to perform CRUD operations.",  "PYTHON"));
                       list.add(new ExplainModel("2. What is web scraping in Python?\n\nExplanation: Web scraping in Python involves extracting data from websites by parsing HTML and other web page content using Python libraries such as BeautifulSoup or Scrapy. So, the correct answer is, Web scraping is the process of extracting data from websites using Python scripts.",  "PYTHON"));
                       list.add(new ExplainModel("3. What is GUI programming in Python?\n\nExplanation: GUI programming in Python involves building graphical user interfaces (GUIs) for Python applications, allowing users to interact with the program through buttons, menus, and other visual elements. So, the correct answer is, GUI programming is the process of building graphical user interfaces for Python applications using libraries like Tkinter or PyQt.",  "PYTHON"));
                       list.add(new ExplainModel("4. What is data visualization in Python?\n\nExplanation: Data visualization in Python involves creating visual representations of data, such as charts, graphs, and plots, to help users understand and interpret data more effectively. So, the correct answer is, Data visualization is the process of creating visual representations of data using libraries like Matplotlib or Seaborn.",  "PYTHON"));
                       list.add(new ExplainModel("5. What are ML and DS libraries in Python?\n\nExplanation: ML (Machine Learning) and DS (Data Science) libraries in Python are specialized libraries used for tasks related to machine learning, data analysis, and statistical modeling, such as scikit-learn, TensorFlow, and pandas. So, the correct answer is, ML and DS libraries are libraries used for machine learning and data science tasks, such as scikit-learn, TensorFlow, and pandas.",  "PYTHON"));
                       list.add(new ExplainModel("6. What is a web development framework in Python?\n\nExplanation: A web development framework in Python provides a collection of tools, libraries, and conventions for building web applications efficiently, handling tasks such as URL routing, form processing, and database integration. So, the correct answer is, A web development framework is a collection of tools and libraries used for developing web applications, such as Django or Flask.",  "PYTHON"));
                       list.add(new ExplainModel("7. What is Django in Python?\n\nExplanation: Django is a high-level web development framework in Python that encourages rapid development and clean, pragmatic design, enabling developers to build web applications quickly and efficiently. So, the correct answer is, Django is a web development framework in Python.",  "PYTHON"));
                       list.add(new ExplainModel("8. What is Flask in Python?\n\nExplanation: Flask is a lightweight web development framework in Python that is simple, flexible, and easy to use, making it suitable for building small to medium-sized web applications and APIs. So, the correct answer is, Flask is a web development framework in Python.",  "PYTHON"));
                       list.add(new ExplainModel("9. What is the purpose of SQLAlchemy in Python?\n\nExplanation: SQLAlchemy is an SQL toolkit and Object-Relational Mapping (ORM) library for Python, allowing developers to interact with databases using Python objects and SQL expressions, providing a high-level API for database operations. So, the correct answer is, SQLAlchemy is an SQL toolkit and Object-Relational Mapping (ORM) library for Python, providing a high-level API for working with databases.",  "PYTHON"));
                       list.add(new ExplainModel("10. What is the purpose of Scrapy in Python?\n\nExplanation: Scrapy is a powerful web scraping framework in Python, used for extracting data from websites by crawling and scraping web pages, enabling developers to build web crawlers and spiders for various purposes. So, the correct answer is, Scrapy is a web scraping framework in Python, used for extracting data from websites.",  "PYTHON"));
                       break;
               }
               break;
       }

        adapter = new SubExplainAdapter(getContext(), list);
        binding.rcv2.setAdapter(adapter);

    }
}